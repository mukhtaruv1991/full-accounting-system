name: Vercel Deploy & Telegram Logs

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Trigger Vercel Deploy
        id: vercel
        run: |
          echo "Triggering Vercel deploy..."
          response=$(curl -s -X GET "https://api.vercel.com/v1/integrations/deploy/prj_9Vz4lBS1Gkba9eVw3yAEg1LdQWTF/BJRyi3RKzv" \
            -H "Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}")
          echo "vercel_response=$response" >> $GITHUB_ENV
          deployment_id=$(echo $response | jq -r '.job.id')
          echo "deployment_id=$deployment_id" >> $GITHUB_ENV
          echo "Deployment triggered with ID: $deployment_id"

      - name: Wait for Deployment to Finish
        run: |
          echo "Waiting for Vercel deployment to complete..."
          for i in {1..30}; do
            status=$(curl -s -H "Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}" \
              https://api.vercel.com/v12/deployments/${{ env.deployment_id }} | jq -r '.readyState')
            echo "Status: $status"
            if [ "$status" = "READY" ] || [ "$status" = "ERROR" ]; then
              break
            fi
            sleep 10
          done
          echo "final_status=$status" >> $GITHUB_ENV

      - name: Fetch Deployment Logs
        run: |
          logs=$(curl -s -H "Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}" \
            "https://api.vercel.com/v12/deployments/${{ env.deployment_id }}/events" | jq -r '.events[].payload.message')
          echo "deployment_logs=$logs" >> $GITHUB_ENV

      - name: Send Logs to Telegram
        run: |
          max_length=4000
          log_text="${{ env.deployment_logs }}"
          while [ -n "$log_text" ]; do
            part="${log_text:0:max_length}"
            curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
              -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
              -d text="$part"
            log_text="${log_text:max_length}"
          done
