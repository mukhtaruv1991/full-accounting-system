name: Deploy to Render and Notify

on:
  push:
    branches:
      - main

jobs:
  deploy-backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    env:
      RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      RENDER_SERVICE_ID: ${{ secrets.RENDER_BACKEND_SERVICE_ID }}
      SERVICE_NAME: "Backend"
    steps:
      - name: Install jq
        run: sudo apt-get -y install jq

      - name: Deploy and Notify
        run: |
          echo "üöÄ Starting $SERVICE_NAME deployment..."
          
          DEPLOY_RESPONSE=$(curl -s -X POST "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys" \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Accept: application/json" \
            -d '{}')

          DEPLOY_ID=$(echo "$DEPLOY_RESPONSE" | jq -r '.id')

          if [ -z "$DEPLOY_ID" ] || [ "$DEPLOY_ID" = "null" ]; then
            MSG="‚ùå $SERVICE_NAME deployment failed to start.\n$DEPLOY_RESPONSE"
            curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
              -d "chat_id=$TELEGRAM_CHAT_ID" \
              -d "text=$MSG"
            exit 1
          fi

          curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
            -d "chat_id=$TELEGRAM_CHAT_ID" \
            -d "text=üöÄ $SERVICE_NAME deployment started (Deploy ID: $DEPLOY_ID)"

          LAST_EVENT_ID=""
          FINAL_STATUS=""

          while true; do
            sleep 15

            EVENTS=$(curl -s -H "Authorization: Bearer $RENDER_API_KEY" \
              "https://api.render.com/v1/deploys/$DEPLOY_ID/events")

            STATUS=$(curl -s -H "Authorization: Bearer $RENDER_API_KEY" \
              "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys/$DEPLOY_ID" | jq -r '.status')

            # ÿ•ÿ±ÿ≥ÿßŸÑ ÿ£Ÿä ÿ≠ÿØÿ´ ÿ¨ÿØŸäÿØ
            echo "$EVENTS" | jq -c '.[]' | while read e; do
              EID=$(echo "$e" | jq -r '.id')
              MSG=$(echo "$e" | jq -r '.message')
              if [[ "$EID" != "$LAST_EVENT_ID" ]]; then
                curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
                  -d "chat_id=$TELEGRAM_CHAT_ID" \
                  -d "text=‚Ä¢ $MSG"
                LAST_EVENT_ID=$EID
              fi
            done

            if [[ "$STATUS" == "live" || "$STATUS" == "build_failed" || "$STATUS" == "deploy_failed" || "$STATUS" == "canceled" ]]; then
              FINAL_STATUS=$STATUS
              break
            fi
          done

          # ÿ•ÿ¥ÿπÿßÿ± ŸÜŸáÿßÿ¶Ÿä
          if [ "$FINAL_STATUS" == "live" ]; then
            FINAL_MSG="‚úÖ $SERVICE_NAME deploy succeeded!"
          else
            FINAL_MSG="‚ùå $SERVICE_NAME deploy failed with status: $FINAL_STATUS"
          fi

          curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
            -d "chat_id=$TELEGRAM_CHAT_ID" \
            -d "text=$FINAL_MSG"

  deploy-frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    env:
      RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      RENDER_SERVICE_ID: ${{ secrets.RENDER_FRONTEND_SERVICE_ID }}
      SERVICE_NAME: "Frontend"
    steps:
      - name: Install jq
        run: sudo apt-get -y install jq

      - name: Deploy and Notify
        run: |
          echo "üöÄ Starting $SERVICE_NAME deployment..."
          
          DEPLOY_RESPONSE=$(curl -s -X POST "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys" \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Accept: application/json" \
            -d '{}')

          DEPLOY_ID=$(echo "$DEPLOY_RESPONSE" | jq -r '.id')

          if [ -z "$DEPLOY_ID" ] || [ "$DEPLOY_ID" = "null" ]; then
            MSG="‚ùå $SERVICE_NAME deployment failed to start.\n$DEPLOY_RESPONSE"
            curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
              -d "chat_id=$TELEGRAM_CHAT_ID" \
              -d "text=$MSG"
            exit 1
          fi

          curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
            -d "chat_id=$TELEGRAM_CHAT_ID" \
            -d "text=üöÄ $SERVICE_NAME deployment started (Deploy ID: $DEPLOY_ID)"

          LAST_EVENT_ID=""
          FINAL_STATUS=""

          while true; do
            sleep 15

            EVENTS=$(curl -s -H "Authorization: Bearer $RENDER_API_KEY" \
              "https://api.render.com/v1/deploys/$DEPLOY_ID/events")

            STATUS=$(curl -s -H "Authorization: Bearer $RENDER_API_KEY" \
              "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys/$DEPLOY_ID" | jq -r '.status')

            echo "$EVENTS" | jq -c '.[]' | while read e; do
              EID=$(echo "$e" | jq -r '.id')
              MSG=$(echo "$e" | jq -r '.message')
              if [[ "$EID" != "$LAST_EVENT_ID" ]]; then
                curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
                  -d "chat_id=$TELEGRAM_CHAT_ID" \
                  -d "text=‚Ä¢ $MSG"
                LAST_EVENT_ID=$EID
              fi
            done

            if [[ "$STATUS" == "live" || "$STATUS" == "build_failed" || "$STATUS" == "deploy_failed" || "$STATUS" == "canceled" ]]; then
              FINAL_STATUS=$STATUS
              break
            fi
          done

          if [ "$FINAL_STATUS" == "live" ]; then
            FINAL_MSG="‚úÖ $SERVICE_NAME deploy succeeded!"
          else
            FINAL_MSG="‚ùå $SERVICE_NAME deploy failed with status: $FINAL_STATUS"
          fi

          curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
            -d "chat_id=$TELEGRAM_CHAT_ID" \
            -d "text=$FINAL_MSG"
