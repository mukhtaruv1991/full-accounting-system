name: Deploy to Render with Real-time Logs

on:
  push:
    branches:
      - main

jobs:
  deploy-backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    env:
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      RENDER_SERVICE_ID: ${{ secrets.RENDER_BACKEND_SERVICE_ID }}
      SERVICE_NAME: "Backend"
    steps:
      - name: Install jq
        run: sudo apt-get -y install jq curl

      - name: Deploy and Notify
        run: |
          send_telegram() {
            local text="$1"
            curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
              -d "chat_id=$TELEGRAM_CHAT_ID" \
              -d "parse_mode=Markdown" \
              -d "text=$text"
          }

          echo "üöÄ Starting $SERVICE_NAME deploy..."
          send_telegram "üöÄ $SERVICE_NAME deployment started"

          # Trigger deploy on Render
          deploy_response=$(curl -s -w "\n%{http_code}" -X POST \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Accept: application/json" \
            "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys")

          http_code=$(echo "$deploy_response" | tail -n1)
          body=$(echo "$deploy_response" | sed '$d')

          if [ "$http_code" -ne 201 ]; then
            send_telegram "‚ùå Trigger Failed for $SERVICE_NAME. Check API Key or Service ID."
            exit 1
          fi

          deploy_id=$(echo "$body" | jq -r '.id')
          echo "Deploy ID: $deploy_id"

          declare -A sent_events

          # Polling loop to send logs in real-time
          while true; do
            sleep 10

            # Get deploy events (logs)
            EVENTS=$(curl -s -H "Authorization: Bearer $RENDER_API_KEY" \
              "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys/$deploy_id/events")

            for row in $(echo "$EVENTS" | jq -c '.[]'); do
              EID=$(echo "$row" | jq -r '.id')
              MSG=$(echo "$row" | jq -r '.message')

              if [ -z "${sent_events[$EID]}" ]; then
                send_telegram "‚Ä¢ $MSG"
                sent_events[$EID]=1
              fi
            done

            # Check deploy status
            STATUS=$(curl -s -H "Authorization: Bearer $RENDER_API_KEY" \
              "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys/$deploy_id" | jq -r '.status')

            if [[ "$STATUS" == "live" ]]; then
              send_telegram "‚úÖ $SERVICE_NAME deploy succeeded!"
              break
            elif [[ "$STATUS" == "build_failed" || "$STATUS" == "deploy_failed" || "$STATUS" == "canceled" ]]; then
              send_telegram "‚ùå $SERVICE_NAME deploy failed with status: $STATUS"
              break
            fi
          done

  deploy-frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    env:
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
      RENDER_SERVICE_ID: ${{ secrets.RENDER_FRONTEND_SERVICE_ID }}
      SERVICE_NAME: "Frontend"
    steps:
      - name: Install jq
        run: sudo apt-get -y install jq curl

      - name: Deploy and Notify
        run: |
          send_telegram() {
            local text="$1"
            curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
              -d "chat_id=$TELEGRAM_CHAT_ID" \
              -d "parse_mode=Markdown" \
              -d "text=$text"
          }

          echo "üöÄ Starting $SERVICE_NAME deploy..."
          send_telegram "üöÄ $SERVICE_NAME deployment started"

          # Trigger deploy on Render
          deploy_response=$(curl -s -w "\n%{http_code}" -X POST \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Accept: application/json" \
            "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys")

          http_code=$(echo "$deploy_response" | tail -n1)
          body=$(echo "$deploy_response" | sed '$d')

          if [ "$http_code" -ne 201 ]; then
            send_telegram "‚ùå Trigger Failed for $SERVICE_NAME. Check API Key or Service ID."
            exit 1
          fi

          deploy_id=$(echo "$body" | jq -r '.id')
          echo "Deploy ID: $deploy_id"

          declare -A sent_events

          while true; do
            sleep 10
            EVENTS=$(curl -s -H "Authorization: Bearer $RENDER_API_KEY" \
              "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys/$deploy_id/events")

            for row in $(echo "$EVENTS" | jq -c '.[]'); do
              EID=$(echo "$row" | jq -r '.id')
              MSG=$(echo "$row" | jq -r '.message')

              if [ -z "${sent_events[$EID]}" ]; then
                send_telegram "‚Ä¢ $MSG"
                sent_events[$EID]=1
              fi
            done

            STATUS=$(curl -s -H "Authorization: Bearer $RENDER_API_KEY" \
              "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys/$deploy_id" | jq -r '.status')

            if [[ "$STATUS" == "live" ]]; then
              send_telegram "‚úÖ $SERVICE_NAME deploy succeeded!"
              break
            elif [[ "$STATUS" == "build_failed" || "$STATUS" == "deploy_failed" || "$STATUS" == "canceled" ]]; then
              send_telegram "‚ùå $SERVICE_NAME deploy failed with status: $STATUS"
              break
            fi
          done
